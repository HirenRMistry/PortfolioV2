{"version":3,"sources":["components/Header.jsx","components/About.jsx","components/TechTag.jsx","components/ProjectCard.jsx","components/Portfolio.jsx","components/Job.jsx","components/Resume.jsx","components/Contact.jsx","components/Footer.jsx","serviceWorker.js","App.js","reportWebVitals.js","index.js"],"names":["Header","this","props","data","name","description","linkedin","social","github","background","type","bg","socialsStyle","fontSize","margin","color","id","className","href","title","url","style","Component","About","profilepic","image","aboutText","bio","AOS","init","duration","src","alt","map","el","TechTag","tag","col","colours","variant","marginRight","backgroundColor","borderRadius","size","ProjectCard","project","p","rounded","borderWidth","w","h","textAlign","align","spacing","cursor","_hover","shadow","boxShadow","category","date","one_line","tags","t","Portfolio","filterProjects","str","state","projects","filter","includes","updateProjState","setState","currList","buttons","createFilterButtons","activeStr","categories","onClick","defaultCategory","bind","colour","n","push","console","log","v","i","a","indexOf","padding","minChildWidth","mt","Job","chevronButton","show","job","contentStyle","border","contentArrowStyle","borderRight","iconStyle","icon","position","desc","length","company","location","listStyleType","d","marginLeft","marginTop","Resume","resume","marginBottom","borderBottom","Contact","message","contactmessage","action","method","htmlFor","defaultValue","onChange","handleChange","cols","rows","colorScheme","Footer","networks","network","Boolean","window","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","App","theme","aboutMeInfo","Projects","resumeInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.936104ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ParticlesBg  from 'particles-bg';\nexport default class Header extends Component {\n\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var description= this.props.data.description;\n      var linkedin = this.props.data.social[0];\n      var github = this.props.data.social[2];\n      var background = <ParticlesBg type=\"lines\"  bg={true} />;\n    }\n\n    var socialsStyle = {\n      fontSize: \"25px\", \n      margin:\"15px\", \n      color: '#11ABB0'\n    }\n\n    return (\n      <header id=\"home\">\n      {background}\n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\n            <li><a className=\"smoothscroll\" href=\"#resume\">Experience</a></li>\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n\n         </ul>\n      </nav>\n\n      <div className=\"row banner\">\n\n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3>{description}</h3>\n            {/* <hr />             */}\n            <a href={linkedin.url}><i className={linkedin.className} style={socialsStyle}></i></a>\n            <a href={github.url}><i className={github.className} style={socialsStyle}></i></a>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport AOS from 'aos';\n\nexport default class About extends Component {\n\n  render(){\n      if(this.props.data){\n        var profilepic = \"images/\"+this.props.data.image;\n        var aboutText = this.props.data.bio;\n        \n        AOS.init({\n          duration : 2000\n        });\n      }\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n              <img className=\"profile-pic\" data-aos=\"fade-up\" src={profilepic} alt=\"Profile Pic\" />\n          </div>\n          <div className=\"nine columns main-col\">\n              <h2>ME.</h2>\n              {aboutText.map(el => (\n                <div><p>{el}</p></div>\n              ))}\n          </div>\n        </div>\n      </section>\n  );\n  }\n}\n\n","import React, { Component } from 'react';\nimport colours from '../data/colours.json';\nimport {Tag} from '@chakra-ui/react';\n\n\nexport default class TechTag extends Component {\n    render(){\n        var tag = this.props.tag;\n        var col = colours[tag] ? colours[tag] : colours['default'];\n    \n        return (\n            <Tag \n                className=\"tag\"\n                variant=\"subtle\" \n                marginRight=\"2px\" \n                color=\"white\"\n                backgroundColor={col} \n                borderRadius=\"full\" \n                size='lg'\n                >\n                {tag}\n            </Tag>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {HStack} from '@chakra-ui/react';\nimport TechTag from './TechTag';\n\nexport default class ProjectCard extends Component {\n\n  render() {\n      const project = this.props.project\n       \n      function url(project){\n        if(project.url && project.github){\n          return <a href={project.url}><i className=\" projlink github fa fa-github\"></i></a>\n        }\n        if (project.url){\n          return <a href={project.url}><i className=\" projlink fa fa-external-link\"></i></a>\n        }\n      return null;\n    }\n\n    return (\n      <HStack\n        p={4}\n        rounded=\"xl\"\n        borderWidth=\"1px\"\n        w=\"100%\"\n        h=\"100%\"\n        textAlign=\"left\"\n        align=\"start\"\n        spacing={4}\n        cursor=\"pointer\"\n        _hover={{ shadow: \"dark-lg\" }}\n        boxShadow=\"lg\"\n        \n      >\n        <div key={project.title} className=\"columns portfolio-item\">\n          <div className=\"projectCard\">\n            <h1>{project.title}{url(project)}</h1>\n            <h2>{project.category}</h2>\n            <h3>{project.date}</h3>\n            <p>{project.one_line}</p>\n            <div>\n              {project.tags.map(t => <TechTag tag={t}/>)}\n            </div>\n          </div>\n        </div>\n      </HStack>\n    );\n  }\n}","import React, { Component } from 'react';\nimport 'aos/dist/aos.css';\nimport ProjectCard from './ProjectCard';\nimport { SimpleGrid } from '@chakra-ui/layout';\nimport { Button } from '@chakra-ui/react';\n\nexport default class Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: this.props.data.projects, \n      defaultCategory: this.props.data.defaultCategory,\n      categories: this.props.data.categories\n    };\n\n    this.state.buttons = this.createFilterButtons(this.state.defaultCategory);\n    this.state.currList = this.filterProjects(this.state.defaultCategory);\n\n    this.updateProjState = this.updateProjState.bind(this);\n    this.createFilterButtons = this.createFilterButtons.bind(this);\n  }\n\n  filterProjects = (str) => {\n    return this.state.projects.filter((el) => el.tags.includes(str))\n  }\n\n  updateProjState = (str) => {\n    this.setState({\n      currList: str==='All' ? this.state.projects : this.filterProjects(str),\n      buttons: this.createFilterButtons(str)\n    })\n  }\n\n  createFilterButtons = (activeStr) => {\n    return this.state.categories.map(str => {\n        return(\n        <Button\n          className={str===activeStr ? 'filter-active':null} \n          size=\"lg\" \n          onClick={() => this.updateProjState(str)}>\n            {str}\n        </Button>)\n      })\n    }\n\n  render() {\n    if (this.props.data) {\n\n      //Find distinct tags\n      var colour = []\n      this.state.projects.map(project => project.tags.map(n => colour.push(n)));\n      console.log(colour.filter((v, i, a) => a.indexOf(v) === i));\n\n    }\n\n    return (\n\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <div className=\"portfolioTitle\">\n              <h1><span>Portfolio</span></h1>\n              <h1>Here are some of my university and personal projects.</h1>\n            </div>\n            <div id=\"portfolio-flters\" className=\"button-group filter-button-group \">\n              {this.state.buttons}\n            </div>\n          </div>\n        </div>\n\n        <div style={{padding:\"25px\"}}>\n          <SimpleGrid minChildWidth=\"46%\" spacing=\"40px\" mt={5}>\n          {this.state.currList.map(project => (\n            <ProjectCard project={project}/>\n          ))}\n          </SimpleGrid>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { VerticalTimelineElement}  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport {FaBriefcase, FaChevronDown} from 'react-icons/fa';\nimport TechTag from './TechTag';\n\nexport default class Job extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          show: false\n        };\n    }\n\n    chevronButton = () => {\n        return (\n            <button \n                onClick={() => this.setState({show: !this.state.show})}\n                style={{color: \"#CC5200\"}}\n            >\n            <FaChevronDown/></button>\n        )\n    }   \n    \n    render(){\n        var job = this.props.job; \n\n\n        return (\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--work\"\n              contentStyle={{border: '2px solid  #0762f9', color: 'black'}}\n              contentArrowStyle={{ borderRight: '7px solid  #0762f9' }}\n              date={job.date}\n              iconStyle={{ background: '#95A3A3', color: '#fff' }}\n              icon={<FaBriefcase/>}\n            >\n              <h3>{job.position}  {job.desc.length ? this.chevronButton() : null}</h3>\n              <h4><i>{job.company} - {job.location}</i></h4> \n              {this.state.show && \n                <ul style={{listStyleType: \"disc\"}}>\n                  {job.desc.map(d => <li style={{marginLeft: \"20px\"}}>{d}</li>)}\n                </ul>\n                }\n              <div style={{marginTop: '5px'}}>\n                {job.tags.map(t => <TechTag tag={t}/>)}\n              </div>\n            </VerticalTimelineElement>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport Job from './Job';\nimport { VerticalTimeline}  from 'react-vertical-timeline-component';\n\nexport default class Resume extends Component {\n\n  render() {\n    if(this.props.data){\n      var resume = this.props.data;\n    }\n\n    var titleContainer = {\n      textAlign:'center', \n      marginBottom: '30px'\n    };\n    var titleStyle = {\n      borderBottom: '3px solid orange',\n      padding: '3px',\n    }\n\n    return (\n        <section id=\"resume\">\n          <div style={titleContainer}>\n            <h1><span style={titleStyle}>Experience</span></h1>\n          </div>\n          <VerticalTimeline>\n            {resume.map(job => (\n              <Job job={job}/>\n            ))}\n          </VerticalTimeline>\n\n        </section>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Button } from '@chakra-ui/react';\nclass Contact extends Component {\n  render() {\n\n    if(this.props.data){\n      var message = this.props.data.contactmessage;\n    }\n\n    return (\n      <section id=\"contact\">\n\n         <div className=\"row section-head\">\n\n            <div className=\"ten columns\">\n            <h1><span>Get In Touch.</span></h1>\n\n                  <p className=\"lead\">{message}</p>\n\n            </div>\n\n         </div>\n\n         <div className=\"row\">\n            <div className=\"eight columns\">\n\n               <form action=\"\" method=\"post\" id=\"contactForm\" name=\"contactForm\">\n\t\t\t\t\t<fieldset>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactName\">Name <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactName\" name=\"contactName\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactEmail\">Email <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactEmail\" name=\"contactEmail\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactSubject\">Subject</label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactSubject\" name=\"contactSubject\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n                     <label htmlFor=\"contactMessage\">Message <span className=\"required\">*</span></label>\n                     <textarea cols=\"50\" rows=\"8\" id=\"contactMessage\" name=\"contactMessage\"></textarea>\n                  </div>\n\n                  <div>\n                     <Button size=\"lg\" padding=\"10px\" borderRadius=\"lg\" colorScheme=\"blackAlpha\" className=\"submit\">Submit</Button>\n                     <span id=\"image-loader\">\n                        <img alt=\"\" src=\"images/loader.gif\" />\n                     </span>\n                  </div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t   </form>\n\n           <div id=\"message-warning\"> Error boy</div>\n\t\t\t\t   <div id=\"message-success\">\n                  <i className=\"fa fa-check\"></i>Your message was sent, thank you!<br />\n\t\t\t\t   </div>\n           </div>\n\n\n\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks = this.props.data.social.map(network => {\n        return (\n          <li key={network.name}>\n            <a href={network.url}>\n              <i className={network.className}></i>\n            </a>\n          </li>\n        )\n      })\n    }\n\n    return (\n      <footer id=\"footer\">\n\n        <div className=\"row\">\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">\n                  {networks}\n              </ul>\n\n              <ul className=\"copyright\">\n                  <li>Hiren Mistry 2020</li>\n              </ul>\n\n            </div>\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {\n  ChakraProvider,\n  theme,\n} from '@chakra-ui/react';\n\nimport Header from './components/Header';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Resume from './components/Resume';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Projects from './data/projects.json'\nimport aboutMeInfo from './data/about.json'\nimport resumeInfo from './data/resume.json'\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Header data={aboutMeInfo}/>\n      <About data={aboutMeInfo}/>    \n      <Portfolio data={Projects}/>\n      <Resume data={resumeInfo}/>\n      <Contact data={aboutMeInfo}/>\n      <Footer data={aboutMeInfo}/>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\nserviceWorker.unregister();\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}